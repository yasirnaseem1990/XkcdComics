plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'com.diffplug.spotless'
    id 'com.vanniktech.android.junit.jacoco'
    /*id 'com.google.gms.google-services'*/
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.xkcd.comics"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true

            buildConfigField("String", "BASE_URL", baseUrlDev)
            buildConfigField("String", "API_KEY", apikey)

            shrinkResources false
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    androidExtensions {
        features = ["parcelize"]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "androidx.recyclerview:recyclerview:1.3.0-alpha01"

    // Architecture
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_interceptor"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Third-party
    implementation "io.coil-kt:coil:1.1.1"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.mockk:mockk:1.10.6"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "io.mockk:mockk-android:1.10.6"
}

spotless {
    kotlin {
        target '**/*.kt'
        targetExclude("$buildDir/**/*.kt")
        targetExclude('bin/**/*.kt')

        ktlint("0.40.0")
        licenseHeaderFile rootProject.file('spotless/copyright.kt')
    }
}

junitJacoco {
    jacocoVersion = '0.8.2'
    includeNoLocationClasses = false
    includeInstrumentationCoverageInMergedReport = true
    excludes = [
            '**/databinding/**/*.*',
            '**/android/databinding/*Binding.*',
            '**/BR.*',
            '**/R.*',
            '**/R$*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*_MembersInjector.*',
            '**/Dagger*Component.*',
            '**/Dagger*Component$Builder.*',
            '**/*Module_*Factory.*',
            '**/*Fragment*.*',
            '**/*Activity*.*',
            '**/*Adapter*.*',
            '**/*ViewPager*.*',
            '**/*ViewHolder*.*',
            '**/*Module*.*'
    ]
}